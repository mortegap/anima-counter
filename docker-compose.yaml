services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: anima-counter-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT}:5432"
    networks:
      - anima-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: anima-counter-backend
    restart: unless-stopped
    ports:
      - "${BACKEND_PORT}:3000"
    networks:
      - anima-network
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT=${BACKEND_PORT}
      - FRONTEND_URL=${FRONTEND_URL}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Aplicación Frontend Vue.js
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: anima-counter-frontend
    restart: unless-stopped
    ports:
      - "${APP_PORT}:80"
    networks:
      - anima-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Adminer para gestión de la base de datos (opcional)
  adminer:
    image: adminer:latest
    container_name: anima-counter-adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT}:8080"
    networks:
      - anima-network
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: ${ADMINER_DEFAULT_SERVER}

volumes:
  postgres_data:
    driver: local

networks:
  anima-network:
    driver: bridge
